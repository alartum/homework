import wave
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import math
import random

types = {
    1: np.int8,
    2: np.int16,
    4: np.int32
}


wav = wave.open("sound.wav", mode="r")
(nchannels, sampwidth, framerate, nframes, comptype, compname) = wav.getparams()

duration = nframes / framerate
w, h = 1000, 800
k = nframes/w/32
DPI = 100
peak = 256 ** sampwidth / 2

content = wav.readframes(nframes)
samples = np.fromstring(content, dtype=types[sampwidth])

plt.figure(1, figsize=(float(w)/DPI, float(h)/DPI), dpi=DPI)
np.set_printoptions(threshold=np.nan)

GK = 8
# -------------------------------------------------------------
n = 0
channel = samples[0::nchannels][:90000]
axes = plt.subplot(3, 1, n+1, axisbg="k")
axes.plot(channel, "r")
# ----------------------------------------------------------------
channel = samples[0::nchannels][:90000]
sum_arr = [0] * channel.size
sta = 3

for n in range(1, sta):
	STEP = 1000
	for j in range(STEP):
		sum_arr[0] += abs(channel[j])
	for j in range(1, len(channel) - STEP):
		sum_arr[j] = sum_arr[j - 1] - abs(channel[j - 1]) + abs(channel[j + STEP - 1])

	for j in range(len(sum_arr)):
		sum_arr[j] //= STEP
	axes = plt.subplot(sta, 1, n + 1, axisbg="k")
	axes.plot(sum_arr, "g")
	channel = sum_arr[:]

plt.savefig("wave", dpi=DPI)
plt.show()

